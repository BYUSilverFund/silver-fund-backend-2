import pandas as pd

############################################################################################################
def format_delta_nav(c2):
    c2['ClientAccountID'] = c2['ClientAccountID'].astype(str)
    c2['CurrencyPrimary'] = c2['CurrencyPrimary'].astype(str)
    c2['FromDate'] = pd.to_datetime(c2['FromDate'], format='%Y%m%d')
    c2['ToDate'] = pd.to_datetime(c2['ToDate'], format='%Y%m%d')
    c2['StartingValue'] = pd.to_numeric(c2['StartingValue'], errors='coerce')
    c2['Mtm'] = pd.to_numeric(c2['Mtm'], errors='coerce')
    c2['MtmAtPaxos'] = pd.to_numeric(c2['MtmAtPaxos'], errors='coerce')
    c2['Realized'] = pd.to_numeric(c2['Realized'], errors='coerce')
    c2['ChangeInUnrealized'] = pd.to_numeric(c2['ChangeInUnrealized'], errors='coerce')
    c2['CostAdjustments'] = pd.to_numeric(c2['CostAdjustments'], errors='coerce')
    c2['TransferredPnlAdjustments'] = pd.to_numeric(c2['TransferredPnlAdjustments'], errors='coerce')
    c2['DepositsWithdrawals'] = pd.to_numeric(c2['DepositsWithdrawals'], errors='coerce')
    c2['CarbonCredits'] = pd.to_numeric(c2['CarbonCredits'], errors='coerce')
    c2['Donations'] = pd.to_numeric(c2['Donations'], errors='coerce')
    c2['InternalCashTransfers'] = pd.to_numeric(c2['InternalCashTransfers'], errors='coerce')
    c2['PaxosTransfers'] = pd.to_numeric(c2['PaxosTransfers'], errors='coerce')
    c2['ExcessFundSweep'] = pd.to_numeric(c2['ExcessFundSweep'], errors='coerce')
    c2['AssetTransfers'] = pd.to_numeric(c2['AssetTransfers'], errors='coerce')
    c2['DebitCardActivity'] = pd.to_numeric(c2['DebitCardActivity'], errors='coerce')
    c2['BillPay'] = pd.to_numeric(c2['BillPay'], errors='coerce')
    c2['GrantActivity'] = pd.to_numeric(c2['GrantActivity'], errors='coerce')
    c2['Dividends'] = pd.to_numeric(c2['Dividends'], errors='coerce')
    c2['WithholdingTax'] = pd.to_numeric(c2['WithholdingTax'], errors='coerce')
    c2['871mWithholding'] = pd.to_numeric(c2['871mWithholding'], errors='coerce')
    c2['WithholdingTaxCollected'] = pd.to_numeric(c2['WithholdingTaxCollected'], errors='coerce')
    c2['ChangeInDividendAccruals'] = pd.to_numeric(c2['ChangeInDividendAccruals'], errors='coerce')
    c2['Interest'] = pd.to_numeric(c2['Interest'], errors='coerce')
    c2['ChangeInInterestAccruals'] = pd.to_numeric(c2['ChangeInInterestAccruals'], errors='coerce')
    c2['BrokerFees'] = pd.to_numeric(c2['BrokerFees'], errors='coerce')
    c2['changeInBrokerFeeAccruals'] = pd.to_numeric(c2['changeInBrokerFeeAccruals'], errors='coerce')
    c2['AdvisorFees'] = pd.to_numeric(c2['AdvisorFees'], errors='coerce')
    c2['ClientFees'] = pd.to_numeric(c2['ClientFees'], errors='coerce')
    c2['OtherFees'] = pd.to_numeric(c2['OtherFees'], errors='coerce')
    c2['FeesReceivables'] = pd.to_numeric(c2['FeesReceivables'], errors='coerce')
    c2['Commissions'] = pd.to_numeric(c2['Commissions'], errors='coerce')
    c2['CommissionsAtPaxos'] = pd.to_numeric(c2['CommissionsAtPaxos'], errors='coerce')
    c2['ReferralFee'] = pd.to_numeric(c2['ReferralFee'], errors='coerce')
    c2['CommissionCreditsRedemption'] = pd.to_numeric(c2['CommissionCreditsRedemption'], errors='coerce')
    c2['CommissionReceivables'] = pd.to_numeric(c2['CommissionReceivables'], errors='coerce')
    c2['ForexCommissions'] = pd.to_numeric(c2['ForexCommissions'], errors='coerce')
    c2['TransactionTax'] = pd.to_numeric(c2['TransactionTax'], errors='coerce')
    c2['TaxReceivables'] = pd.to_numeric(c2['TaxReceivables'], errors='coerce')
    c2['SalesTax'] = pd.to_numeric(c2['SalesTax'], errors='coerce')
    c2['BillableSalesTax'] = pd.to_numeric(c2['BillableSalesTax'], errors='coerce')
    c2['SoftDollars'] = pd.to_numeric(c2['SoftDollars'], errors='coerce')
    c2['NetFxTrading'] = pd.to_numeric(c2['NetFxTrading'], errors='coerce')
    c2['FxTranslation'] = pd.to_numeric(c2['FxTranslation'], errors='coerce')
    c2['LinkingAdjustments'] = pd.to_numeric(c2['LinkingAdjustments'], errors='coerce')
    c2['Other'] = pd.to_numeric(c2['Other'], errors='coerce')
    c2['EndingValue'] = pd.to_numeric(c2['EndingValue'], errors='coerce')
    c2['TWR'] = pd.to_numeric(c2['TWR'], errors='coerce')
    c2['CorporateActionProceeds'] = pd.to_numeric(c2['CorporateActionProceeds'], errors='coerce')
    return c2

############################################################################################################
def format_dividends(c2):
    c2['ClientAccountID'] = c2['ClientAccountID'].astype(str)
    c2['CurrencyPrimary'] = c2['CurrencyPrimary'].astype(str)
    c2['FXRateToBase'] = pd.to_numeric(c2['FXRateToBase'])
    c2['AssetClass'] = c2['AssetClass'].astype(str)
    c2['SubCategory'] = c2['SubCategory'].astype(str)
    c2['Symbol'] = c2['Symbol'].astype(str)
    c2['Description']=c2['Description'].astype(str)
    c2['Conid']=c2['Conid'].astype(str)
    c2['SecurityID'] = c2['SecurityID'].astype(str)
    c2['SecurityIDType'] = c2['SecurityIDType'].astype(str)
    c2['CUSIP'] = c2['CUSIP'].astype(str)
    c2['ISIN'] = c2['ISIN'].astype(str)
    c2['FIGI'] = c2['ListingExchange'].astype(str)
    c2['UnderlyingConid'] = c2['UnderlyingConid'].astype(str)
    c2['UnderlyingSymbol'] = c2['UnderlyingSymbol'].astype(str)
    c2['UnderlyingSecurityID'] = c2['UnderlyingSecurityID'].astype(str)
    c2['UnderlyingListingExchange'] = c2['UnderlyingListingExchange'].astype(str)
    c2['Multiplier'] = pd.to_numeric(c2['Multiplier'])
    c2['Strike'] = pd.to_numeric(c2['Strike'])
    c2['ExDate'] = pd.to_datetime(c2['ExDate'], format='%Y%m%d')
    c2['PayDate'] = pd.to_datetime(c2['PayDate'], format='%Y%m%d')
    c2['Quantity'] = pd.to_numeric(c2['Quantity'])
    c2['Tax'] = pd.to_numeric(c2['Tax'])
    c2['Fee'] = pd.to_numeric(c2['Fee'])
    c2['GrossRate'] = pd.to_numeric(c2['GrossRate'])
    c2['GrossAmount'] = pd.to_numeric(c2['GrossAmount'])
    c2['NetAmount'] = pd.to_numeric(c2['NetAmount'])
    c2['Code'] = c2['Code'].astype(str)
    return c2

############################################################################################################
def format_holdings(c2):
    c2['ClientAccountID'] = c2['ClientAccountID'].astype(str)
    c2['AccountAlias'] = c2['AccountAlias'].astype(str)
    c2['FXRateToBase'] = pd.to_numeric(c2['FXRateToBase'])
    c2['AssetClass'] = c2['AssetClass'].astype(str)
    c2['SubCategory'] = c2['SubCategory'].astype(str)
    c2['Symbol'] = c2['Symbol'].astype(str)
    c2['Description']=c2['Description'].astype(str)
    c2['Conid']=c2['Conid'].astype(str)
    c2['SecurityID'] = c2['SecurityID'].astype(str)
    c2['SecurityIDType'] = c2['SecurityIDType'].astype(str)
    c2['CUSIP'] = c2['CUSIP'].astype(str)
    c2['ISIN'] = c2['ISIN'].astype(str)
    c2['FIGI'] = c2['ListingExchange'].astype(str)
    c2['ListingExchange'] = c2['ListingExchange'].astype(str)
    c2['UnderlyingConid'] = c2['UnderlyingConid'].astype(str)
    c2['UnderlyingSymbol'] = c2['UnderlyingSymbol'].astype(str)
    c2['UnderlyingSecurityID'] = c2['UnderlyingSecurityID'].astype(str)
    c2['UnderlyingListingExchange'] = c2['UnderlyingListingExchange'].astype(str)
    c2['Issuer'] = c2['Issuer'].astype(str)
    c2['IssuerCountryCode'] = c2['IssuerCountryCode'].astype(str)
    c2['Multiplier'] = pd.to_numeric(c2['Multiplier'])
    c2['Strike'] = pd.to_numeric(c2['Strike'])
    c2['Expiry'] = pd.to_datetime(c2['Expiry'], format='%Y%m%d')
    c2['Put/Call'] = c2['Put/Call'].astype(str)
    c2['PrincipalAdjustFactor'] = pd.to_numeric(c2['PrincipalAdjustFactor'])
    c2['ReportDate'] = pd.to_datetime(c2['ReportDate'], format='%Y%m%d')
    c2['Quantity'] = pd.to_numeric(c2['Quantity'])
    c2['MarkPrice'] = pd.to_numeric(c2['MarkPrice'])
    c2['PositionValue'] = pd.to_numeric(c2['PositionValue'])
    c2['OpenPrice'] = pd.to_numeric(c2['OpenPrice'])
    c2['CostBasisPrice'] = pd.to_numeric(c2['CostBasisPrice'])
    c2['CostBasisMoney'] = pd.to_numeric(c2['CostBasisMoney'])
    c2['PercentOfNAV'] = pd.to_numeric(c2['PercentOfNAV'])
    c2['FifoPnlUnrealized'] = pd.to_numeric(c2['FifoPnlUnrealized'])
    return c2

############################################################################################################
def format_trades(c2):
    c2['ClientAccountID'] = c2['ClientAccountID'].astype(str)
    c2['CurrencyPrimary'] = c2['CurrencyPrimary'].astype(str)
    c2['FXRateToBase'] = pd.to_numeric(c2['FXRateToBase'])
    c2['AssetClass'] = c2['AssetClass'].astype(str)
    c2['SubCategory'] = c2['SubCategory'].astype(str)
    c2['Symbol'] = c2['Symbol'].astype(str)
    c2['Description']=c2['Description'].astype(str)
    c2['Conid']=c2['Conid'].astype(str)
    c2['SecurityID'] = c2['SecurityID'].astype(str)
    c2['SecurityIDType'] = c2['SecurityIDType'].astype(str)
    c2['CUSIP'] = c2['CUSIP'].astype(str)
    c2['ISIN'] = c2['ISIN'].astype(str)
    c2['FIGI'] = c2['ListingExchange'].astype(str)
    c2['ListingExchange'] = c2['ListingExchange'].astype(str)
    c2['UnderlyingConid'] = c2['UnderlyingConid'].astype(str)
    c2['UnderlyingSymbol'] = c2['UnderlyingSymbol'].astype(str)
    c2['UnderlyingSecurityID'] = c2['UnderlyingSecurityID'].astype(str)
    c2['UnderlyingListingExchange'] = c2['UnderlyingListingExchange'].astype(str)
    c2['Issuer'] = c2['Issuer'].astype(str)
    c2['IssuerCountryCode'] = c2['IssuerCountryCode'].astype(str)
    c2['TradeID'] = c2['TradeID'].astype(str)
    c2['Multiplier'] = pd.to_numeric(c2['Multiplier'])
    c2['RelatedTradeID'] = c2['RelatedTradeID'].astype(str)
    c2['Strike'] = pd.to_numeric(c2['Strike'])
    c2['ReportDate'] = pd.to_datetime(c2['ReportDate'], format='%Y%m%d')
    c2['Expiry'] = pd.to_datetime(c2['Expiry'], format='%Y%m%d')
    c2['Put/Call'] = c2['Put/Call'].astype(str)
    c2['TradeDate'] = pd.to_datetime(c2['TradeDate'], format='%Y%m%d')
    c2['PrincipalAdjustFactor'] = pd.to_numeric(c2['PrincipalAdjustFactor'])
    c2['SettleDateTarget'] = pd.to_datetime(c2['SettleDateTarget'], format='%Y%m%d')
    c2['TransactionType'] = c2['TransactionType'].astype(str)
    c2['Exchange'] = c2['Exchange'].astype(str)
    c2['Quantity'] = pd.to_numeric(c2['Quantity'])
    c2['TradePrice'] = pd.to_numeric(c2['TradePrice'])
    c2['TradeMoney'] = pd.to_numeric(c2['TradeMoney'])
    c2['Proceeds'] = pd.to_numeric(c2['Proceeds'])
    c2['Taxes'] = pd.to_numeric(c2['Taxes'])
    c2['IBCommission'] = pd.to_numeric(c2['IBCommission'])
    c2['IBCommissionCurrency'] = c2['IBCommissionCurrency'].astype(str)
    c2['NetCash'] = pd.to_numeric(c2['NetCash'])
    c2['ClosePrice'] = pd.to_numeric(c2['ClosePrice'])
    return c2



